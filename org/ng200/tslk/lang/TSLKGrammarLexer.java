// Generated from TSLKGrammar.g4 by ANTLR 4.0
package org.ng200.tslk.lang;
import org.antlr.v4.runtime.Lexer;
import org.antlr.v4.runtime.CharStream;
import org.antlr.v4.runtime.Token;
import org.antlr.v4.runtime.TokenStream;
import org.antlr.v4.runtime.*;
import org.antlr.v4.runtime.atn.*;
import org.antlr.v4.runtime.dfa.DFA;
import org.antlr.v4.runtime.misc.*;

@SuppressWarnings({"all", "warnings", "unchecked", "unused", "cast"})
public class TSLKGrammarLexer extends Lexer {
	protected static final DFA[] _decisionToDFA;
	protected static final PredictionContextCache _sharedContextCache =
		new PredictionContextCache();
	public static final int
		NUMBER=1, FUNC=2, FOR=3, WHILE=4, IF=5, ELSE=6, THEN=7, DO=8, END=9, OR=10, 
		AND=11, LOCAL=12, TABLE=13, RETURN=14, BREAK=15, CONTINUE=16, TRUE=17, 
		FALSE=18, PLUSEQ=19, MINUSEQ=20, MULEQ=21, DIVEQ=22, REMEQ=23, POWEQ=24, 
		LESSEQ=25, LESS=26, MOREEQ=27, MORE=28, EQEQ=29, EQ=30, NOTEQ=31, PLUS=32, 
		MINUS=33, MUL=34, DIV=35, REM=36, NOT=37, LEN=38, POW=39, DOT=40, COMMA=41, 
		SEMI=42, COLON=43, LPAREN=44, RPAREN=45, LBRACKET=46, RBRACKET=47, LBRACE=48, 
		RBRACE=49, STRING=50, SLCOMMENT=51, MLCOMMENT=52, WS=53, GENERAL_ID=54;
	public static String[] modeNames = {
		"DEFAULT_MODE"
	};

	public static final String[] tokenNames = {
		"<INVALID>",
		"NUMBER", "'functiony'", "'for'", "'while'", "'if'", "'else'", "'then'", 
		"'do'", "'end'", "'or'", "'and'", "'local'", "'table'", "'return'", "'break'", 
		"'continue'", "'true'", "'false'", "'+='", "'-='", "'*='", "'/='", "'%='", 
		"'^='", "'<='", "'<'", "'>='", "'>'", "'=='", "'='", "'!='", "'+'", "'-'", 
		"'*'", "'/'", "'%'", "'not'", "'#'", "'^'", "'.'", "','", "';'", "':'", 
		"'('", "')'", "'['", "']'", "'{'", "'}'", "STRING", "SLCOMMENT", "MLCOMMENT", 
		"WS", "GENERAL_ID"
	};
	public static final String[] ruleNames = {
		"NUMBER", "FUNC", "FOR", "WHILE", "IF", "ELSE", "THEN", "DO", "END", "OR", 
		"AND", "LOCAL", "TABLE", "RETURN", "BREAK", "CONTINUE", "TRUE", "FALSE", 
		"PLUSEQ", "MINUSEQ", "MULEQ", "DIVEQ", "REMEQ", "POWEQ", "LESSEQ", "LESS", 
		"MOREEQ", "MORE", "EQEQ", "EQ", "NOTEQ", "PLUS", "MINUS", "MUL", "DIV", 
		"REM", "NOT", "LEN", "POW", "DOT", "COMMA", "SEMI", "COLON", "LPAREN", 
		"RPAREN", "LBRACKET", "RBRACKET", "LBRACE", "RBRACE", "STRING", "ESC", 
		"DIGIT", "HEXDIGIT", "XID_Start", "XID_Continue", "SLCOMMENT", "MLCOMMENT", 
		"WS", "GENERAL_ID"
	};


	public TSLKGrammarLexer(CharStream input) {
		super(input);
		_interp = new LexerATNSimulator(this,_ATN,_decisionToDFA,_sharedContextCache);
	}

	@Override
	public String getGrammarFileName() { return "TSLKGrammar.g4"; }

	@Override
	public String[] getTokenNames() { return tokenNames; }

	@Override
	public String[] getRuleNames() { return ruleNames; }

	@Override
	public String[] getModeNames() { return modeNames; }

	@Override
	public ATN getATN() { return _ATN; }

	@Override
	public void action(RuleContext _localctx, int ruleIndex, int actionIndex) {
		switch (ruleIndex) {
		case 55: SLCOMMENT_action((RuleContext)_localctx, actionIndex); break;

		case 56: MLCOMMENT_action((RuleContext)_localctx, actionIndex); break;

		case 57: WS_action((RuleContext)_localctx, actionIndex); break;
		}
	}
	private void SLCOMMENT_action(RuleContext _localctx, int actionIndex) {
		switch (actionIndex) {
		case 0: skip();  break;
		}
	}
	private void WS_action(RuleContext _localctx, int actionIndex) {
		switch (actionIndex) {
		case 2: skip();  break;
		}
	}
	private void MLCOMMENT_action(RuleContext _localctx, int actionIndex) {
		switch (actionIndex) {
		case 1: skip();  break;
		}
	}

	public static final String _serializedATN =
		"\2\48\u017b\b\1\4\2\t\2\4\3\t\3\4\4\t\4\4\5\t\5\4\6\t\6\4\7\t\7\4\b\t"+
		"\b\4\t\t\t\4\n\t\n\4\13\t\13\4\f\t\f\4\r\t\r\4\16\t\16\4\17\t\17\4\20"+
		"\t\20\4\21\t\21\4\22\t\22\4\23\t\23\4\24\t\24\4\25\t\25\4\26\t\26\4\27"+
		"\t\27\4\30\t\30\4\31\t\31\4\32\t\32\4\33\t\33\4\34\t\34\4\35\t\35\4\36"+
		"\t\36\4\37\t\37\4 \t \4!\t!\4\"\t\"\4#\t#\4$\t$\4%\t%\4&\t&\4\'\t\'\4"+
		"(\t(\4)\t)\4*\t*\4+\t+\4,\t,\4-\t-\4.\t.\4/\t/\4\60\t\60\4\61\t\61\4\62"+
		"\t\62\4\63\t\63\4\64\t\64\4\65\t\65\4\66\t\66\4\67\t\67\48\t8\49\t9\4"+
		":\t:\4;\t;\4<\t<\3\2\6\2{\n\2\r\2\16\2|\3\2\3\2\6\2\u0081\n\2\r\2\16\2"+
		"\u0082\3\2\6\2\u0086\n\2\r\2\16\2\u0087\5\2\u008a\n\2\3\3\3\3\3\3\3\3"+
		"\3\3\3\3\3\3\3\3\3\3\3\3\3\4\3\4\3\4\3\4\3\5\3\5\3\5\3\5\3\5\3\5\3\6\3"+
		"\6\3\6\3\7\3\7\3\7\3\7\3\7\3\b\3\b\3\b\3\b\3\b\3\t\3\t\3\t\3\n\3\n\3\n"+
		"\3\n\3\13\3\13\3\13\3\f\3\f\3\f\3\f\3\r\3\r\3\r\3\r\3\r\3\r\3\16\3\16"+
		"\3\16\3\16\3\16\3\16\3\17\3\17\3\17\3\17\3\17\3\17\3\17\3\20\3\20\3\20"+
		"\3\20\3\20\3\20\3\21\3\21\3\21\3\21\3\21\3\21\3\21\3\21\3\21\3\22\3\22"+
		"\3\22\3\22\3\22\3\23\3\23\3\23\3\23\3\23\3\23\3\24\3\24\3\24\3\25\3\25"+
		"\3\25\3\26\3\26\3\26\3\27\3\27\3\27\3\30\3\30\3\30\3\31\3\31\3\31\3\32"+
		"\3\32\3\32\3\33\3\33\3\34\3\34\3\34\3\35\3\35\3\36\3\36\3\36\3\37\3\37"+
		"\3 \3 \3 \3!\3!\3\"\3\"\3#\3#\3$\3$\3%\3%\3&\3&\3&\3&\3\'\3\'\3(\3(\3"+
		")\3)\3*\3*\3+\3+\3,\3,\3-\3-\3.\3.\3/\3/\3\60\3\60\3\61\3\61\3\62\3\62"+
		"\3\63\3\63\3\63\7\63\u0135\n\63\f\63\16\63\u0138\13\63\3\63\3\63\3\64"+
		"\3\64\3\64\3\64\3\64\3\64\3\64\3\64\5\64\u0144\n\64\3\65\3\65\3\66\3\66"+
		"\3\67\3\67\38\38\58\u014e\n8\39\39\39\39\79\u0154\n9\f9\169\u0157\139"+
		"\39\59\u015a\n9\39\39\39\39\3:\3:\3:\3:\7:\u0164\n:\f:\16:\u0167\13:\3"+
		":\3:\3:\3:\3:\3;\6;\u016f\n;\r;\16;\u0170\3;\3;\3<\3<\7<\u0177\n<\f<\16"+
		"<\u017a\13<\4\u0155\u0165=\3\3\1\5\4\1\7\5\1\t\6\1\13\7\1\r\b\1\17\t\1"+
		"\21\n\1\23\13\1\25\f\1\27\r\1\31\16\1\33\17\1\35\20\1\37\21\1!\22\1#\23"+
		"\1%\24\1\'\25\1)\26\1+\27\1-\30\1/\31\1\61\32\1\63\33\1\65\34\1\67\35"+
		"\19\36\1;\37\1= \1?!\1A\"\1C#\1E$\1G%\1I&\1K\'\1M(\1O)\1Q*\1S+\1U,\1W"+
		"-\1Y.\1[/\1]\60\1_\61\1a\62\1c\63\1e\64\1g\2\1i\2\1k\2\1m\2\1o\2\1q\65"+
		"\2s\66\3u\67\4w8\1\3\2\7\4$$^^\4ppvv\5\62;CHch\5C\\aac|\5\13\f\17\17\""+
		"\"\u0182\2\3\3\2\2\2\2\5\3\2\2\2\2\7\3\2\2\2\2\t\3\2\2\2\2\13\3\2\2\2"+
		"\2\r\3\2\2\2\2\17\3\2\2\2\2\21\3\2\2\2\2\23\3\2\2\2\2\25\3\2\2\2\2\27"+
		"\3\2\2\2\2\31\3\2\2\2\2\33\3\2\2\2\2\35\3\2\2\2\2\37\3\2\2\2\2!\3\2\2"+
		"\2\2#\3\2\2\2\2%\3\2\2\2\2\'\3\2\2\2\2)\3\2\2\2\2+\3\2\2\2\2-\3\2\2\2"+
		"\2/\3\2\2\2\2\61\3\2\2\2\2\63\3\2\2\2\2\65\3\2\2\2\2\67\3\2\2\2\29\3\2"+
		"\2\2\2;\3\2\2\2\2=\3\2\2\2\2?\3\2\2\2\2A\3\2\2\2\2C\3\2\2\2\2E\3\2\2\2"+
		"\2G\3\2\2\2\2I\3\2\2\2\2K\3\2\2\2\2M\3\2\2\2\2O\3\2\2\2\2Q\3\2\2\2\2S"+
		"\3\2\2\2\2U\3\2\2\2\2W\3\2\2\2\2Y\3\2\2\2\2[\3\2\2\2\2]\3\2\2\2\2_\3\2"+
		"\2\2\2a\3\2\2\2\2c\3\2\2\2\2e\3\2\2\2\2q\3\2\2\2\2s\3\2\2\2\2u\3\2\2\2"+
		"\2w\3\2\2\2\3\u0089\3\2\2\2\5\u008b\3\2\2\2\7\u0095\3\2\2\2\t\u0099\3"+
		"\2\2\2\13\u009f\3\2\2\2\r\u00a2\3\2\2\2\17\u00a7\3\2\2\2\21\u00ac\3\2"+
		"\2\2\23\u00af\3\2\2\2\25\u00b3\3\2\2\2\27\u00b6\3\2\2\2\31\u00ba\3\2\2"+
		"\2\33\u00c0\3\2\2\2\35\u00c6\3\2\2\2\37\u00cd\3\2\2\2!\u00d3\3\2\2\2#"+
		"\u00dc\3\2\2\2%\u00e1\3\2\2\2\'\u00e7\3\2\2\2)\u00ea\3\2\2\2+\u00ed\3"+
		"\2\2\2-\u00f0\3\2\2\2/\u00f3\3\2\2\2\61\u00f6\3\2\2\2\63\u00f9\3\2\2\2"+
		"\65\u00fc\3\2\2\2\67\u00fe\3\2\2\29\u0101\3\2\2\2;\u0103\3\2\2\2=\u0106"+
		"\3\2\2\2?\u0108\3\2\2\2A\u010b\3\2\2\2C\u010d\3\2\2\2E\u010f\3\2\2\2G"+
		"\u0111\3\2\2\2I\u0113\3\2\2\2K\u0115\3\2\2\2M\u0119\3\2\2\2O\u011b\3\2"+
		"\2\2Q\u011d\3\2\2\2S\u011f\3\2\2\2U\u0121\3\2\2\2W\u0123\3\2\2\2Y\u0125"+
		"\3\2\2\2[\u0127\3\2\2\2]\u0129\3\2\2\2_\u012b\3\2\2\2a\u012d\3\2\2\2c"+
		"\u012f\3\2\2\2e\u0131\3\2\2\2g\u013b\3\2\2\2i\u0145\3\2\2\2k\u0147\3\2"+
		"\2\2m\u0149\3\2\2\2o\u014d\3\2\2\2q\u014f\3\2\2\2s\u015f\3\2\2\2u\u016e"+
		"\3\2\2\2w\u0174\3\2\2\2y{\5i\65\2zy\3\2\2\2{|\3\2\2\2|z\3\2\2\2|}\3\2"+
		"\2\2}~\3\2\2\2~\u0080\7\60\2\2\177\u0081\5i\65\2\u0080\177\3\2\2\2\u0081"+
		"\u0082\3\2\2\2\u0082\u0080\3\2\2\2\u0082\u0083\3\2\2\2\u0083\u008a\3\2"+
		"\2\2\u0084\u0086\5i\65\2\u0085\u0084\3\2\2\2\u0086\u0087\3\2\2\2\u0087"+
		"\u0085\3\2\2\2\u0087\u0088\3\2\2\2\u0088\u008a\3\2\2\2\u0089z\3\2\2\2"+
		"\u0089\u0085\3\2\2\2\u008a\4\3\2\2\2\u008b\u008c\7h\2\2\u008c\u008d\7"+
		"w\2\2\u008d\u008e\7p\2\2\u008e\u008f\7e\2\2\u008f\u0090\7v\2\2\u0090\u0091"+
		"\7k\2\2\u0091\u0092\7q\2\2\u0092\u0093\7p\2\2\u0093\u0094\7{\2\2\u0094"+
		"\6\3\2\2\2\u0095\u0096\7h\2\2\u0096\u0097\7q\2\2\u0097\u0098\7t\2\2\u0098"+
		"\b\3\2\2\2\u0099\u009a\7y\2\2\u009a\u009b\7j\2\2\u009b\u009c\7k\2\2\u009c"+
		"\u009d\7n\2\2\u009d\u009e\7g\2\2\u009e\n\3\2\2\2\u009f\u00a0\7k\2\2\u00a0"+
		"\u00a1\7h\2\2\u00a1\f\3\2\2\2\u00a2\u00a3\7g\2\2\u00a3\u00a4\7n\2\2\u00a4"+
		"\u00a5\7u\2\2\u00a5\u00a6\7g\2\2\u00a6\16\3\2\2\2\u00a7\u00a8\7v\2\2\u00a8"+
		"\u00a9\7j\2\2\u00a9\u00aa\7g\2\2\u00aa\u00ab\7p\2\2\u00ab\20\3\2\2\2\u00ac"+
		"\u00ad\7f\2\2\u00ad\u00ae\7q\2\2\u00ae\22\3\2\2\2\u00af\u00b0\7g\2\2\u00b0"+
		"\u00b1\7p\2\2\u00b1\u00b2\7f\2\2\u00b2\24\3\2\2\2\u00b3\u00b4\7q\2\2\u00b4"+
		"\u00b5\7t\2\2\u00b5\26\3\2\2\2\u00b6\u00b7\7c\2\2\u00b7\u00b8\7p\2\2\u00b8"+
		"\u00b9\7f\2\2\u00b9\30\3\2\2\2\u00ba\u00bb\7n\2\2\u00bb\u00bc\7q\2\2\u00bc"+
		"\u00bd\7e\2\2\u00bd\u00be\7c\2\2\u00be\u00bf\7n\2\2\u00bf\32\3\2\2\2\u00c0"+
		"\u00c1\7v\2\2\u00c1\u00c2\7c\2\2\u00c2\u00c3\7d\2\2\u00c3\u00c4\7n\2\2"+
		"\u00c4\u00c5\7g\2\2\u00c5\34\3\2\2\2\u00c6\u00c7\7t\2\2\u00c7\u00c8\7"+
		"g\2\2\u00c8\u00c9\7v\2\2\u00c9\u00ca\7w\2\2\u00ca\u00cb\7t\2\2\u00cb\u00cc"+
		"\7p\2\2\u00cc\36\3\2\2\2\u00cd\u00ce\7d\2\2\u00ce\u00cf\7t\2\2\u00cf\u00d0"+
		"\7g\2\2\u00d0\u00d1\7c\2\2\u00d1\u00d2\7m\2\2\u00d2 \3\2\2\2\u00d3\u00d4"+
		"\7e\2\2\u00d4\u00d5\7q\2\2\u00d5\u00d6\7p\2\2\u00d6\u00d7\7v\2\2\u00d7"+
		"\u00d8\7k\2\2\u00d8\u00d9\7p\2\2\u00d9\u00da\7w\2\2\u00da\u00db\7g\2\2"+
		"\u00db\"\3\2\2\2\u00dc\u00dd\7v\2\2\u00dd\u00de\7t\2\2\u00de\u00df\7w"+
		"\2\2\u00df\u00e0\7g\2\2\u00e0$\3\2\2\2\u00e1\u00e2\7h\2\2\u00e2\u00e3"+
		"\7c\2\2\u00e3\u00e4\7n\2\2\u00e4\u00e5\7u\2\2\u00e5\u00e6\7g\2\2\u00e6"+
		"&\3\2\2\2\u00e7\u00e8\7-\2\2\u00e8\u00e9\7?\2\2\u00e9(\3\2\2\2\u00ea\u00eb"+
		"\7/\2\2\u00eb\u00ec\7?\2\2\u00ec*\3\2\2\2\u00ed\u00ee\7,\2\2\u00ee\u00ef"+
		"\7?\2\2\u00ef,\3\2\2\2\u00f0\u00f1\7\61\2\2\u00f1\u00f2\7?\2\2\u00f2."+
		"\3\2\2\2\u00f3\u00f4\7\'\2\2\u00f4\u00f5\7?\2\2\u00f5\60\3\2\2\2\u00f6"+
		"\u00f7\7`\2\2\u00f7\u00f8\7?\2\2\u00f8\62\3\2\2\2\u00f9\u00fa\7>\2\2\u00fa"+
		"\u00fb\7?\2\2\u00fb\64\3\2\2\2\u00fc\u00fd\7>\2\2\u00fd\66\3\2\2\2\u00fe"+
		"\u00ff\7@\2\2\u00ff\u0100\7?\2\2\u01008\3\2\2\2\u0101\u0102\7@\2\2\u0102"+
		":\3\2\2\2\u0103\u0104\7?\2\2\u0104\u0105\7?\2\2\u0105<\3\2\2\2\u0106\u0107"+
		"\7?\2\2\u0107>\3\2\2\2\u0108\u0109\7#\2\2\u0109\u010a\7?\2\2\u010a@\3"+
		"\2\2\2\u010b\u010c\7-\2\2\u010cB\3\2\2\2\u010d\u010e\7/\2\2\u010eD\3\2"+
		"\2\2\u010f\u0110\7,\2\2\u0110F\3\2\2\2\u0111\u0112\7\61\2\2\u0112H\3\2"+
		"\2\2\u0113\u0114\7\'\2\2\u0114J\3\2\2\2\u0115\u0116\7p\2\2\u0116\u0117"+
		"\7q\2\2\u0117\u0118\7v\2\2\u0118L\3\2\2\2\u0119\u011a\7%\2\2\u011aN\3"+
		"\2\2\2\u011b\u011c\7`\2\2\u011cP\3\2\2\2\u011d\u011e\7\60\2\2\u011eR\3"+
		"\2\2\2\u011f\u0120\7.\2\2\u0120T\3\2\2\2\u0121\u0122\7=\2\2\u0122V\3\2"+
		"\2\2\u0123\u0124\7<\2\2\u0124X\3\2\2\2\u0125\u0126\7*\2\2\u0126Z\3\2\2"+
		"\2\u0127\u0128\7+\2\2\u0128\\\3\2\2\2\u0129\u012a\7]\2\2\u012a^\3\2\2"+
		"\2\u012b\u012c\7_\2\2\u012c`\3\2\2\2\u012d\u012e\7}\2\2\u012eb\3\2\2\2"+
		"\u012f\u0130\7\177\2\2\u0130d\3\2\2\2\u0131\u0136\7$\2\2\u0132\u0135\5"+
		"g\64\2\u0133\u0135\n\2\2\2\u0134\u0132\3\2\2\2\u0134\u0133\3\2\2\2\u0135"+
		"\u0138\3\2\2\2\u0136\u0134\3\2\2\2\u0136\u0137\3\2\2\2\u0137\u0139\3\2"+
		"\2\2\u0138\u0136\3\2\2\2\u0139\u013a\7$\2\2\u013af\3\2\2\2\u013b\u0143"+
		"\7^\2\2\u013c\u0144\t\3\2\2\u013d\u013e\7w\2\2\u013e\u013f\5k\66\2\u013f"+
		"\u0140\5k\66\2\u0140\u0141\5k\66\2\u0141\u0142\5k\66\2\u0142\u0144\3\2"+
		"\2\2\u0143\u013c\3\2\2\2\u0143\u013d\3\2\2\2\u0144h\3\2\2\2\u0145\u0146"+
		"\4\62;\2\u0146j\3\2\2\2\u0147\u0148\t\4\2\2\u0148l\3\2\2\2\u0149\u014a"+
		"\t\5\2\2\u014an\3\2\2\2\u014b\u014e\5m\67\2\u014c\u014e\4\63;\2\u014d"+
		"\u014b\3\2\2\2\u014d\u014c\3\2\2\2\u014ep\3\2\2\2\u014f\u0150\7\61\2\2"+
		"\u0150\u0151\7\61\2\2\u0151\u0155\3\2\2\2\u0152\u0154\13\2\2\2\u0153\u0152"+
		"\3\2\2\2\u0154\u0157\3\2\2\2\u0155\u0156\3\2\2\2\u0155\u0153\3\2\2\2\u0156"+
		"\u0159\3\2\2\2\u0157\u0155\3\2\2\2\u0158\u015a\7\17\2\2\u0159\u0158\3"+
		"\2\2\2\u0159\u015a\3\2\2\2\u015a\u015b\3\2\2\2\u015b\u015c\7\f\2\2\u015c"+
		"\u015d\3\2\2\2\u015d\u015e\b9\2\2\u015er\3\2\2\2\u015f\u0160\7\61\2\2"+
		"\u0160\u0161\7,\2\2\u0161\u0165\3\2\2\2\u0162\u0164\13\2\2\2\u0163\u0162"+
		"\3\2\2\2\u0164\u0167\3\2\2\2\u0165\u0166\3\2\2\2\u0165\u0163\3\2\2\2\u0166"+
		"\u0168\3\2\2\2\u0167\u0165\3\2\2\2\u0168\u0169\7,\2\2\u0169\u016a\7\61"+
		"\2\2\u016a\u016b\3\2\2\2\u016b\u016c\b:\3\2\u016ct\3\2\2\2\u016d\u016f"+
		"\t\6\2\2\u016e\u016d\3\2\2\2\u016f\u0170\3\2\2\2\u0170\u016e\3\2\2\2\u0170"+
		"\u0171\3\2\2\2\u0171\u0172\3\2\2\2\u0172\u0173\b;\4\2\u0173v\3\2\2\2\u0174"+
		"\u0178\5m\67\2\u0175\u0177\5o8\2\u0176\u0175\3\2\2\2\u0177\u017a\3\2\2"+
		"\2\u0178\u0176\3\2\2\2\u0178\u0179\3\2\2\2\u0179x\3\2\2\2\u017a\u0178"+
		"\3\2\2\2\20\2|\u0082\u0087\u0089\u0134\u0136\u0143\u014d\u0155\u0159\u0165"+
		"\u0170\u0178";
	public static final ATN _ATN =
		ATNSimulator.deserialize(_serializedATN.toCharArray());
	static {
		_decisionToDFA = new DFA[_ATN.getNumberOfDecisions()];
	}
}